name: Build Random Quotes
'on':
  workflow_dispatch: {}
  push:
    branches: 
      - main
      - 'feature/**'
      - 'bugfix/**' 
env:  
  OCTOPUS_PROJECT_NAME: ${{ secrets.OCTOPUS_PROJECT_NAME }}
  OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE }}
  OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
  OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
        
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.14
      with:
        versionSpec: 5.x
        
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.14
      with:
        additionalArguments: /overrideconfig mode=Mainline
        
    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1
      with:
        version: latest
        
    - name: Install Dependencies
      run: npm ci
      shell: bash
      
    - name: Test
      run: npm test
      shell: bash
      
    - name: Build
      run: npm run build
      shell: bash
      
    - name: Package
      run: |-
        SOURCEPATH=.
        OUTPUTPATH=.
        # If there is a build directory, assume that is what we want to package
        if [[ -d "build" ]]; then
          SOURCEPATH=build
        fi
        octo pack \
         --basePath ${SOURCEPATH} \
         --outFolder ${OUTPUTPATH} \
         --id ${{ env.OCTOPUS_PROJECT_NAME }}_pkg \
         --version $versionNumber = "0.${env:GITHUB_RUN_NUMBER}" \
         --format zip \
         --overwrite \
         --include '**/*.html' \
         --include '**/*.htm' \
         --include '**/*.css' \
         --include '**/*.js' \
         --include '**/*.min' \
         --include '**/*.map' \
         --include '**/*.sql' \
         --include '**/*.png' \
         --include '**/*.jpg' \
         --include '**/*.jpeg' \
         --include '**/*.gif' \
         --include '**/*.json' \
         --include '**/*.env' \
         --include '**/*.txt' \
         --include '**/*.Procfile'
      shell: bash
      
    - name: Push packages to Octopus Deploy
      uses: OctopusDeploy/push-package-action@v2
      with:
        project: ${{ env.OCTOPUS_PROJECT_NAME }}
        packages: randomquotes.${{ steps.determine_version.outputs.semVer }}.zip
        overwrite_mode: OverwriteExisting
    
